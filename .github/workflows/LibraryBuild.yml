# LibraryBuild.yml
# Github workflow script to test compile all examples of an Arduino library repository.
#
# Copyright (C) 2020  Armin Joachimsmeyer
# https://github.com/ArminJo/Github-Actions
#
# Before being able to push to my .github\workflows directories,
# I had to create a new personal token with workflow enabled at https://github.com/settings/tokens

# This is the name of the workflow, visible on GitHub UI.
name: LibraryBuild
on:  
  push: # see: https://help.github.com/en/actions/reference/events-that-trigger-workflows#pull-request-event-pull_request
    paths:
    - '**.ino'
    - '**.cpp'
    - '**.h'
    - '**LibraryBuild.yml'
  pull_request:
    paths:
    - '**.ino'
    - '**.cpp'
    - '**.h'
    - '**LibraryBuild.yml'

jobs:
  build:
    name: ${{ matrix.arduino-boards-fqbn }} - test compiling examples

    runs-on: ubuntu-18.04 # I picked Ubuntu to use shell scripts.

    env:
      # Comma separated list without double quotes around the list. 
      REQUIRED_LIBRARIES:

    strategy:
      matrix:
        # The matrix will produce one job for each configuration parameter of type `arduino-boards-fqbn`
        # In the Arduino IDE, the fqbn is printed in the first line of the verbose output for compilation as parameter -fqbn=... for the "arduino-builder -dump-prefs" command
        #
        # Examples: arduino:avr:uno, arduino:avr:leonardo, arduino:avr:nano, arduino:avr:mega
        # arduino:sam:arduino_due_x, arduino:samd:arduino_zero_native"
        # ATTinyCore:avr:attinyx5:chip=85,clock=1internal, digistump:avr:digispark-tiny, digistump:avr:digispark-pro
        # STM32:stm32:GenF1:pnum=BLUEPILL_F103C8
        # esp8266:esp8266:huzzah:eesz=4M3M,xtal=80, esp32:esp32:featheresp32:FlashFreq=80
        # You may add a suffix behind the fqbn with "|" to specify one board for e.g. different compile options like arduino:avr:uno|trace
        #############################################################################################################
        arduino-boards-fqbn:
          - arduino:avr:uno
          - arduino:avr:leonardo
          - arduino:samd:arduino_zero_native
          - esp32:esp32:featheresp32:FlashFreq=80
          - SparkFun:avr:promicro

        # Specify parameters for each board.
        # With examples-exclude you may exclude specific examples for a board. Use a comma separated list.
        #############################################################################################################
        include:
          - arduino-boards-fqbn: arduino:avr:uno
            examples-build-properties:
              AiwaRCT501SendDemo: -DSEND_AIWA_RC_T501
              IRrecord: -DSEND_NEC -DSEND_SONY -DSEND_RC5 -DSEND_RC6
              IRsendDemo: -DSEND_SONY
              IRtest: -DSEND_NEC -DSEND_SONY -DSEND_RC5 -DSEND_RC6
              IRtest2: -DSEND_NEC -DSEND_SONY -DSEND_RC5 -DSEND_RC6
              JVCPanasonicSendDemo: -DSEND_JVC -DSEND_PANASONIC
              LegoPowerFunctionsSendDemo: -DSEND_LEGO_PF
              LegoPowerFunctionsTests: -DSEND_LEGO_PF

          - arduino-boards-fqbn: esp32:esp32:featheresp32:FlashFreq=80
            platform-url: https://dl.espressif.com/dl/package_esp32_index.json
            examples-exclude: AiwaRCT501SendDemo,IRrecord,IRsendDemo,IRsendRawDemo,IRtest,IRtest2,JVCPanasonicSendDemo,LegoPowerFunctionsSendDemo,LGACSendDemo # Comma separated list of (unique substrings of) example names to exclude in build

          - arduino-boards-fqbn: SparkFun:avr:promicro
            arduino-platform: arduino:avr,SparkFun:avr
            platform-url: https://raw.githubusercontent.com/sparkfun/Arduino_Boards/master/IDE_Board_Manager/package_sparkfun_index.json # Arduino URL is not required here


      # Do not cancel all jobs / architectures if one job fails
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@master

      # Use the arduino-test-compile script, because it is faster
      - name: Compile all examples using the bash script arduino-test-compile.sh
        env:
          # Passing parameters to the script by setting the appropriate ENV_* variables.
          ENV_ARDUINO_BOARD_FQBN: ${{ matrix.arduino-boards-fqbn }}
          ENV_ARDUINO_PLATFORM: ${{ matrix.arduino-platform }}
          ENV_PLATFORM_URL: ${{ matrix.platform-url }}
          ENV_REQUIRED_LIBRARIES: ${{ env.REQUIRED_LIBRARIES }}
          ENV_EXAMPLES_EXCLUDE: ${{ matrix.examples-exclude }}
          ENV_EXAMPLES_BUILD_PROPERTIES: ${{ toJson(matrix.examples-build-properties) }}
#          ENV_DEBUG_INSTALL: true

        run: |
          wget --quiet https://raw.githubusercontent.com/ArminJo/arduino-test-compile/master/arduino-test-compile.sh
            ls -l arduino-test-compile.sh
            chmod +x arduino-test-compile.sh
            ./arduino-test-compile.sh
