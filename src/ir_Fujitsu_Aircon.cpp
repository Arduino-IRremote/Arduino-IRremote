// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:07 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Fujitsu_Aircon".


#include "IRremote.h"
/*
IRP: 
{38.4k,413}<1,-1|1,-3>(8,-4,A0:8,A1:8,A2:8,A3:8,A4:8,A5:8,A6:8,A7:8,A8:8,A9:8,A10:8,A11:8,A12:8,A13:8,A14:8,A15:8,1,-104.3m)*{A0=20,A1=99,A2=0,A3=16,A4=16,A5=254,A6=9,A7=48,A8=16*A+wOn,A9=16*C+B,A10=16*E:4+D:4,A11=tOff:8,A12=tOff:3:8+fOff*8+16*tOn:4,A13=tOn:7:8+128*fOn,A14=32,A15=256-(A8+A9+A10+A11+A12+A13+80)%256}[A:0..15,wOn:0..1,B:0..15,C:0..15,D:0..15,E:0..15,tOff:0..1024,tOn:0..1024,fOff:0..1,fOn:0..1]
*/

/*
Protocol documentation:
Protocol for Fujitsu inverter air conditioning. Reference.
*/

#if SEND_FUJITSU_AIRCON

extern unsigned int finiteBitField(unsigned int data,
        unsigned int width,
        unsigned int chop,
        bool complement,
        bool reverse);
extern unsigned int bitCount(unsigned int data);
extern unsigned int bitReverse(unsigned int data, unsigned int width);


static inline void flash(IRsend* instance, unsigned int d) {
    instance->mark(d);
}

static inline void gap(IRsend* instance, unsigned int d) {
    instance->space(d);
}



static void bitField(IRsend* instance, unsigned int data, unsigned int width) {
    for (unsigned int i = 0; i < width; i++) {
        switch(((unsigned int)data >> i) & 1) {
        case 0: {
            flash(instance, 413);
            gap(instance, 413);
        }
        break;
        case 1: {
            flash(instance, 413);
            gap(instance, 1239);
        }
        break;
        }
    }
}
// Local functions; corresponds to Definitions in the IRP.
static inline unsigned int A0(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 20U;
}

static inline unsigned int A1(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 99U;
}

static inline unsigned int A2(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 0U;
}

static inline unsigned int A3(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 16U;
}

static inline unsigned int A4(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 16U;
}

static inline unsigned int A5(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 254U;
}

static inline unsigned int A6(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 9U;
}

static inline unsigned int A7(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 48U;
}

static inline unsigned int A8(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return ((16U) * (A)) + (wOn);
}

static inline unsigned int A9(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return ((16U) * (C)) + (B);
}

static inline unsigned int A10(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return ((16U) * (finiteBitField(E, 4U, 0, false, false))) + (finiteBitField(D, 4U, 0, false, false));
}

static inline unsigned int A11(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return finiteBitField(tOff, 8U, 0, false, false);
}

static inline unsigned int A12(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return ((finiteBitField(tOff, 3U, 8U, false, false)) + ((fOff) * (8U))) + ((16U) * (finiteBitField(tOn, 4U, 0, false, false)));
}

static inline unsigned int A13(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return (finiteBitField(tOn, 7U, 8U, false, false)) + ((128U) * (fOn));
}

static inline unsigned int A14(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return 32U;
}

static inline unsigned int A15(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    return (256U) - ((((((((A8(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn)) + (A9(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn))) + (A10(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn))) + (A11(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn))) + (A12(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn))) + (A13(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn))) + (80U))%(256U));
}

/**
 * Function for sending one signal from the protcol Fujitsu_Aircon.
 * @param A Protocol parameter in the interval [0 .. 15].
 * @param wOn Protocol parameter in the interval [0 .. 1].
 * @param B Protocol parameter in the interval [0 .. 15].
 * @param C Protocol parameter in the interval [0 .. 15].
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param E Protocol parameter in the interval [0 .. 15].
 * @param tOff Protocol parameter in the interval [0 .. 1024].
 * @param tOn Protocol parameter in the interval [0 .. 1024].
 * @param fOff Protocol parameter in the interval [0 .. 1].
 * @param fOn Protocol parameter in the interval [0 .. 1].
 */
void IRsend::sendFujitsu_Aircon(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn) {
    enableIROut(38400U / 1000U);
    IRsend* instance = this;
    flash(instance, 3304);
    gap(instance, 1652);
    bitField(instance, A0(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A1(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A2(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A3(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A4(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A5(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A6(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A7(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A8(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A9(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A10(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A11(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A12(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A13(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A14(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    bitField(instance, A15(A, wOn, B, C, D, E, tOff, tOn, fOff, fOn), 8U);
    flash(instance, 413);
    gap(instance, 104300);
}

#endif // SEND_FUJITSU_AIRCON 
