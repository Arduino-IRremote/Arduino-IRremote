// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:08 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code SharpDVD".


#include "IRremote.h"
/*
IRP: 
{38k,400}<1,-1|1,-3>(8,-4,170:8,90:8,15:4,D:4,S:8,F:8,E:4,C:4,1,-48)*{C=D^S:4:0^S:4:4^F:4:0^F:4:4^E:4}[D:0..15,S:0..255,F:0..255,E:0..15=1]
*/

/*
Protocol documentation:
SharpDVD is the member of the Kaseikyo family with OEM_code1=170 and OEM_code2=90. E=1 in all instances seen so far.
*/

#if SEND_SHARPDVD

extern unsigned int finiteBitField(unsigned int data,
        unsigned int width,
        unsigned int chop,
        bool complement,
        bool reverse);
extern unsigned int bitCount(unsigned int data);
extern unsigned int bitReverse(unsigned int data, unsigned int width);


static inline void flash(IRsend* instance, unsigned int d) {
    instance->mark(d);
}

static inline void gap(IRsend* instance, unsigned int d) {
    instance->space(d);
}



static void bitField(IRsend* instance, unsigned int data, unsigned int width) {
    for (unsigned int i = 0; i < width; i++) {
        switch(((unsigned int)data >> i) & 1) {
        case 0: {
            flash(instance, 400);
            gap(instance, 400);
        }
        break;
        case 1: {
            flash(instance, 400);
            gap(instance, 1200);
        }
        break;
        }
    }
}
// Local functions; corresponds to Definitions in the IRP.
static inline unsigned int C(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E) {
    return (((((D)^(finiteBitField(S, 4U, 0, false, false)))^(finiteBitField(S, 4U, 4U, false, false)))^(finiteBitField(F, 4U, 0, false, false)))^(finiteBitField(F, 4U, 4U, false, false)))^(finiteBitField(E, 4U, 0, false, false));
}

/**
 * Function for sending one signal from the protcol SharpDVD.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 15].
 */
void IRsend::sendSharpDVD(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E) {
    enableIROut(38000U / 1000U);
    IRsend* instance = this;
    flash(instance, 3200);
    gap(instance, 1600);
    bitField(instance, 170U, 8U);
    bitField(instance, 90U, 8U);
    bitField(instance, 15U, 4U);
    bitField(instance, D, 4U);
    bitField(instance, S, 8U);
    bitField(instance, F, 8U);
    bitField(instance, E, 4U);
    bitField(instance, C(D, S, F, E), 4U);
    flash(instance, 400);
    gap(instance, 19200);
}

#endif // SEND_SHARPDVD 
