// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:10 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Xiaomi".


#include "IRremote.h"
/*
IRP: 
{36k,290,msb}<2,-2|2,-3|2,-4|2,-5>(1000u,-2,D:8,F:8,C:4,2,^30m)*{C=(D:4:4^D:4^F:4:4^F:4)}[D:0..255,F:0..255]
*/

/*
Protocol documentation:
Protocol found in the Xiaomi Mi Box Streaming Android TV Device. Defined and described in this thread.
*/

#if SEND_XIAOMI

extern unsigned int finiteBitField(unsigned int data,
        unsigned int width,
        unsigned int chop,
        bool complement,
        bool reverse);
extern unsigned int bitCount(unsigned int data);
extern unsigned int bitReverse(unsigned int data, unsigned int width);

static unsigned long durationCounter = 0UL;

static inline void flash(IRsend* instance, unsigned int d) {
    instance->mark(d);
    durationCounter += (unsigned long) d;
}

static inline void gap(IRsend* instance, unsigned int d) {
    instance->space(d);
    durationCounter += (unsigned long) d;
}

static inline void extent(IRsend* instance, unsigned long d) {
    instance->space((unsigned int)(d - durationCounter));
    durationCounter = 0UL;
}

static void bitField(IRsend* instance, unsigned int data, unsigned int width) {
    static unsigned int pendingBits = 0U;
    static unsigned int pendingData = 0U;
    if (pendingBits > 0U) {
        // This code is valid for msb-first only
        data &= (1U << width) - 1U;
        data |= pendingData << width;
        width += pendingBits;
        pendingBits = 0U;
    }
    if (width % 2U != 0U) {
        pendingData = data;
        pendingBits = width;
        width = 0U;
    }
    for (unsigned int i = 0; i < width; i += 2) {
        switch(((unsigned int)data >> (width - i - 2)) & 3) {
        case 0: {
            flash(instance, 580);
            gap(instance, 580);
        }
        break;
        case 1: {
            flash(instance, 580);
            gap(instance, 870);
        }
        break;
        case 2: {
            flash(instance, 580);
            gap(instance, 1160);
        }
        break;
        case 3: {
            flash(instance, 580);
            gap(instance, 1450);
        }
        break;
        }
    }
}
// Local functions; corresponds to Definitions in the IRP.
static inline unsigned int C(unsigned int D,
        unsigned int F) {
    return (((finiteBitField(D, 4U, 4U, false, false))^(finiteBitField(D, 4U, 0, false, false)))^(finiteBitField(F, 4U, 4U, false, false)))^(finiteBitField(F, 4U, 0, false, false));
}

/**
 * Function for sending one signal from the protcol Xiaomi.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void IRsend::sendXiaomi(unsigned int D,
        unsigned int F) {
    enableIROut(36000U / 1000U);
    IRsend* instance = this;
    durationCounter = 0UL;
    flash(instance, 1000);
    gap(instance, 580);
    bitField(instance, D, 8U);
    bitField(instance, F, 8U);
    bitField(instance, C(D, F), 4U);
    flash(instance, 580);
    extent(instance, 30000UL);
}

#endif // SEND_XIAOMI 
