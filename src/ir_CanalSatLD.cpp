// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:23 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code CanalSatLD".


#include "IRremote.h"
/*
IRP: 
{56k,320,msb}<-1,1|1,-1>(T=0,(1,-1,D:7,S:6,T:1,0:1,F:6,~F:1,-85m,T=1)+)[D:0..127,S:0..63,F:0..63]
*/

/*
Protocol documentation:
The official name for CanalSatLD is \"ruwido r-step\"
*/

#if SEND_CANALSATLD

extern unsigned int finiteBitField(unsigned int data,
        unsigned int width,
        unsigned int chop,
        bool complement,
        bool reverse);
extern unsigned int bitCount(unsigned int data);
extern unsigned int bitReverse(unsigned int data, unsigned int width);


static inline void flash(IRsend* instance, unsigned int d) {
    instance->mark(d);
}

static inline void gap(IRsend* instance, unsigned int d) {
    instance->space(d);
}



static void bitField(IRsend* instance, unsigned int data, unsigned int width) {
    for (unsigned int i = 0; i < width; i++) {
        switch(((unsigned int)data >> (width - i - 1)) & 1) {
        case 0: {
            gap(instance, 320);
            flash(instance, 320);
        }
        break;
        case 1: {
            flash(instance, 320);
            gap(instance, 320);
        }
        break;
        }
    }
}
/**
 * Function for sending one signal from the protcol CanalSatLD.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param S Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void IRsend::sendCanalSatLD(unsigned int D,
        unsigned int S,
        unsigned int F) {
    enableIROut(56000U / 1000U);
    IRsend* instance = this;
    unsigned int T;
    T = 0U;
    flash(instance, 320);
    gap(instance, 320);
    bitField(instance, D, 7U);
    bitField(instance, S, 6U);
    bitField(instance, T, 1U);
    bitField(instance, 0U, 1U);
    bitField(instance, F, 6U);
    bitField(instance, ~F, 1U);
    gap(instance, 85000);
    T = 1U;
}

#endif // SEND_CANALSATLD 
