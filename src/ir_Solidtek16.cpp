// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:26 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Solidtek16".


#include "IRremote.h"
/*
IRP: 
{38k}<-624,468|468,-624>(S=0,(1820,-590,0:1,D:4,F:7,S:1,C:4,1:1,-143m,S=1)3){C=F:4:0+F:3:4+8*S}[D:0..15,F:0..127]
*/

/*
Protocol documentation:
This is a keyboard protocol. The make/break bit is decoded into the subdevice field.
*/

#if SEND_SOLIDTEK16

extern unsigned int finiteBitField(unsigned int data,
        unsigned int width,
        unsigned int chop,
        bool complement,
        bool reverse);
extern unsigned int bitCount(unsigned int data);
extern unsigned int bitReverse(unsigned int data, unsigned int width);


static inline void flash(IRsend* instance, unsigned int d) {
    instance->mark(d);
}

static inline void gap(IRsend* instance, unsigned int d) {
    instance->space(d);
}



static void bitField(IRsend* instance, unsigned int data, unsigned int width) {
    for (unsigned int i = 0; i < width; i++) {
        switch(((unsigned int)data >> i) & 1) {
        case 0: {
            gap(instance, 624);
            flash(instance, 468);
        }
        break;
        case 1: {
            flash(instance, 468);
            gap(instance, 624);
        }
        break;
        }
    }
}
// Local functions; corresponds to Definitions in the IRP.
static inline unsigned int C(unsigned int D,
        unsigned int F,
        unsigned int S) {
    return ((finiteBitField(F, 4U, 0, false, false)) + (finiteBitField(F, 3U, 4U, false, false))) + ((8U) * (S));
}

/**
 * Function for sending one signal from the protcol Solidtek16.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void IRsend::sendSolidtek16(unsigned int D,
        unsigned int F) {
    enableIROut(38000U / 1000U);
    IRsend* instance = this;
    unsigned int S;
    S = 0U;
    flash(instance, 1820);
    gap(instance, 590);
    bitField(instance, 0U, 1U);
    bitField(instance, D, 4U);
    bitField(instance, F, 7U);
    bitField(instance, S, 1U);
    bitField(instance, C(D, F, S), 4U);
    bitField(instance, 1U, 1U);
    gap(instance, 143000);
    S = 1U;
    flash(instance, 1820);
    gap(instance, 590);
    bitField(instance, 0U, 1U);
    bitField(instance, D, 4U);
    bitField(instance, F, 7U);
    bitField(instance, S, 1U);
    bitField(instance, C(D, F, S), 4U);
    bitField(instance, 1U, 1U);
    gap(instance, 143000);
    S = 1U;
    flash(instance, 1820);
    gap(instance, 590);
    bitField(instance, 0U, 1U);
    bitField(instance, D, 4U);
    bitField(instance, F, 7U);
    bitField(instance, S, 1U);
    bitField(instance, C(D, F, S), 4U);
    bitField(instance, 1U, 1U);
    gap(instance, 143000);
    S = 1U;
}

#endif // SEND_SOLIDTEK16 
