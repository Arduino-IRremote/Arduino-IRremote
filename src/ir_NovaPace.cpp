// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:15 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Nova%20Pace".


#include "IRremote.h"
/*
IRP: 
{38k,300,msb}<-1,1|1,-1>((1,-1,D:10,S:8,F:8,T:1,-1,1,-82m)*,T=1-T)[D:0..1023,S:0..255,F:0..255,T@:0..1=0]
*/

/*
Protocol documentation:
Forum thread.
*/

#if SEND_NOVAPACE

extern unsigned int finiteBitField(unsigned int data,
        unsigned int width,
        unsigned int chop,
        bool complement,
        bool reverse);
extern unsigned int bitCount(unsigned int data);
extern unsigned int bitReverse(unsigned int data, unsigned int width);


static inline void flash(IRsend* instance, unsigned int d) {
    instance->mark(d);
}

static inline void gap(IRsend* instance, unsigned int d) {
    instance->space(d);
}



static void bitField(IRsend* instance, unsigned int data, unsigned int width) {
    for (unsigned int i = 0; i < width; i++) {
        switch(((unsigned int)data >> (width - i - 1)) & 1) {
        case 0: {
            gap(instance, 300);
            flash(instance, 300);
        }
        break;
        case 1: {
            flash(instance, 300);
            gap(instance, 300);
        }
        break;
        }
    }
}
/**
 * Function for sending one signal from the protcol NovaPace.
 * @param D Protocol parameter in the interval [0 .. 1023].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void IRsend::sendNovaPace(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int T) {
    enableIROut(38000U / 1000U);
    IRsend* instance = this;
    flash(instance, 300);
    gap(instance, 300);
    bitField(instance, D, 10U);
    bitField(instance, S, 8U);
    bitField(instance, F, 8U);
    bitField(instance, T, 1U);
    gap(instance, 300);
    flash(instance, 300);
    gap(instance, 82000);
}

#endif // SEND_NOVAPACE 
