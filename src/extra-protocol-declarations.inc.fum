// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:08 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code AdNotam".


#if SEND_ADNOTAM

/**
 * Function for sending one signal from the protcol AdNotam.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendAdNotam(unsigned int D,
        unsigned int F);

#endif // SEND_ADNOTAM 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:12 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Aiwa".


#if SEND_AIWA

/**
 * Function for sending one signal from the protcol Aiwa.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendAiwa(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_AIWA 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:17 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Aiwa2".


#if SEND_AIWA2

/**
 * Function for sending one signal from the protcol Aiwa2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendAiwa2(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_AIWA2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:21 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Akai".


#if SEND_AKAI

/**
 * Function for sending one signal from the protcol Akai.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendAkai(unsigned int D,
        unsigned int F);

#endif // SEND_AKAI 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:25 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Amino".


#if SEND_AMINO

/**
 * Function for sending one signal from the protcol Amino.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendAmino(unsigned int D,
        unsigned int F);

#endif // SEND_AMINO 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:30 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Amino-56".


#if SEND_AMINO56

/**
 * Function for sending one signal from the protcol Amino56.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendAmino56(unsigned int D,
        unsigned int F);

#endif // SEND_AMINO56 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:35 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Anthem".


#if SEND_ANTHEM

/**
 * Function for sending one signal from the protcol Anthem.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendAnthem(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_ANTHEM 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:39 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Anthem_relaxed".


#if SEND_ANTHEM_RELAXED

/**
 * Function for sending one signal from the protcol Anthem_relaxed.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendAnthem_relaxed(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_ANTHEM_RELAXED 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:44 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Apple".


#if SEND_APPLE

/**
 * Function for sending one signal from the protcol Apple.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 127].
 * @param PairID Protocol parameter in the interval [0 .. 255].
 */
void sendApple(unsigned int D,
        unsigned int F,
        unsigned int PairID);

#endif // SEND_APPLE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:48 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Archer".


#if SEND_ARCHER

/**
 * Function for sending one signal from the protcol Archer.
 * @param F Protocol parameter in the interval [0 .. 31].
 */
void sendArcher(unsigned int F);

#endif // SEND_ARCHER 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:52 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Audiovox".


#if SEND_AUDIOVOX

/**
 * Function for sending one signal from the protcol Audiovox.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendAudiovox(unsigned int D,
        unsigned int F);

#endif // SEND_AUDIOVOX 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:57 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Barco".


#if SEND_BARCO

/**
 * Function for sending one signal from the protcol Barco.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendBarco(unsigned int D,
        unsigned int F);

#endif // SEND_BARCO 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:01 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Blaupunkt".


#if SEND_BLAUPUNKT

/**
 * Function for sending one signal from the protcol Blaupunkt.
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param D Protocol parameter in the interval [0 .. 7].
 */
void sendBlaupunkt(unsigned int F,
        unsigned int D);

#endif // SEND_BLAUPUNKT 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:06 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Blaupunkt_relaxed".


#if SEND_BLAUPUNKT_RELAXED

/**
 * Function for sending one signal from the protcol Blaupunkt_relaxed.
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param D Protocol parameter in the interval [0 .. 7].
 */
void sendBlaupunkt_relaxed(unsigned int F,
        unsigned int D);

#endif // SEND_BLAUPUNKT_RELAXED 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:10 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Bose".


#if SEND_BOSE

/**
 * Function for sending one signal from the protcol Bose.
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendBose(unsigned int F);

#endif // SEND_BOSE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:14 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Bryston".


#if SEND_BRYSTON

/**
 * Function for sending one signal from the protcol Bryston.
 * @param D Protocol parameter in the interval [0 .. 1023].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendBryston(unsigned int D,
        unsigned int F);

#endif // SEND_BRYSTON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:19 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code CanalSat".


#if SEND_CANALSAT

/**
 * Function for sending one signal from the protcol CanalSat.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param S Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendCanalSat(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_CANALSAT 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:23 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code CanalSatLD".


#if SEND_CANALSATLD

/**
 * Function for sending one signal from the protcol CanalSatLD.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param S Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendCanalSatLD(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_CANALSATLD 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:28 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Canon".


#if SEND_CANON

/**
 * Function for sending one signal from the protcol Canon.
 * @param F Protocol parameter in the interval [0 .. 1].
 */
void sendCanon(unsigned int F);

#endif // SEND_CANON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:32 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Denon".


#if SEND_DENON

/**
 * Function for sending one signal from the protcol Denon.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendDenon(unsigned int D,
        unsigned int F);

#endif // SEND_DENON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:36 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Denon-K".


#if SEND_DENONK

/**
 * Function for sending one signal from the protcol DenonK.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param S Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 4095].
 */
void sendDenonK(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_DENONK 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:41 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Denon{1}".


#if SEND_DENON_1_

/**
 * Function for sending one signal from the protcol Denon_1_.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendDenon_1_(unsigned int D,
        unsigned int F);

#endif // SEND_DENON_1_ 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:46 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Denon{2}".


#if SEND_DENON_2_

/**
 * Function for sending one signal from the protcol Denon_2_.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendDenon_2_(unsigned int D,
        unsigned int F);

#endif // SEND_DENON_2_ 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:50 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Dgtec".


#if SEND_DGTEC

/**
 * Function for sending one signal from the protcol Dgtec.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendDgtec(unsigned int D,
        unsigned int F);

#endif // SEND_DGTEC 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:55 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Digivision".


#if SEND_DIGIVISION

/**
 * Function for sending one signal from the protcol Digivision.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param Dev2 Protocol parameter in the interval [0 .. 255].
 * @param Dev3 Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendDigivision(unsigned int D,
        unsigned int Dev2,
        unsigned int Dev3,
        unsigned int F);

#endif // SEND_DIGIVISION 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:37:59 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code DirecTV".


#if SEND_DIRECTV

/**
 * Function for sending one signal from the protcol DirecTV.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendDirecTV(unsigned int D,
        unsigned int F);

#endif // SEND_DIRECTV 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:04 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code DirecTV_3_FG".


#if SEND_DIRECTV_3FG

/**
 * Function for sending one signal from the protcol DirecTV_3FG.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendDirecTV_3FG(unsigned int D,
        unsigned int F);

#endif // SEND_DIRECTV_3FG 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:09 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Dish_Network".


#if SEND_DISH_NETWORK

/**
 * Function for sending one signal from the protcol Dish_Network.
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param S Protocol parameter in the interval [0 .. 31].
 * @param D Protocol parameter in the interval [0 .. 31].
 */
void sendDish_Network(unsigned int F,
        unsigned int S,
        unsigned int D);

#endif // SEND_DISH_NETWORK 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:13 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Dishplayer".


#if SEND_DISHPLAYER

/**
 * Function for sending one signal from the protcol Dishplayer.
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param S Protocol parameter in the interval [0 .. 31].
 * @param D Protocol parameter in the interval [0 .. 3].
 */
void sendDishplayer(unsigned int F,
        unsigned int S,
        unsigned int D);

#endif // SEND_DISHPLAYER 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:17 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Dysan".


#if SEND_DYSAN

/**
 * Function for sending one signal from the protcol Dysan.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendDysan(unsigned int D,
        unsigned int F);

#endif // SEND_DYSAN 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:22 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Elan".


#if SEND_ELAN

/**
 * Function for sending one signal from the protcol Elan.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendElan(unsigned int D,
        unsigned int F);

#endif // SEND_ELAN 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:26 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Emerson".


#if SEND_EMERSON

/**
 * Function for sending one signal from the protcol Emerson.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendEmerson(unsigned int D,
        unsigned int F);

#endif // SEND_EMERSON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:30 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Epson".


#if SEND_EPSON

/**
 * Function for sending one signal from the protcol Epson.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param OBC Protocol parameter in the interval [0 .. 63].
 * @param T1 Protocol parameter in the interval [0 .. 3].
 * @param T2 Protocol parameter in the interval [0 .. 3].
 * @param F1 Protocol parameter in the interval [0 .. 3].
 * @param F2 Protocol parameter in the interval [0 .. 3].
 */
void sendEpson(unsigned int D,
        unsigned int S,
        unsigned int OBC,
        unsigned int T1,
        unsigned int T2,
        unsigned int F1,
        unsigned int F2);

#endif // SEND_EPSON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:35 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code F12".


#if SEND_F12

/**
 * Function for sending one signal from the protcol F12.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param S Protocol parameter in the interval [0 .. 1].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendF12(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_F12 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:39 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code F12-0".


#if SEND_F120

/**
 * Function for sending one signal from the protcol F120.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendF120(unsigned int D,
        unsigned int F);

#endif // SEND_F120 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:44 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code F12-1".


#if SEND_F121

/**
 * Function for sending one signal from the protcol F121.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendF121(unsigned int D,
        unsigned int F);

#endif // SEND_F121 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:49 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code F32".


#if SEND_F32

/**
 * Function for sending one signal from the protcol F32.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 255].
 */
void sendF32(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E);

#endif // SEND_F32 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:53 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Fujitsu".


#if SEND_FUJITSU

/**
 * Function for sending one signal from the protcol Fujitsu.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 15].
 */
void sendFujitsu(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E);

#endif // SEND_FUJITSU 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:02 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Fujitsu-56".


#if SEND_FUJITSU56

/**
 * Function for sending one signal from the protcol Fujitsu56.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 15].
 * @param X Protocol parameter in the interval [0 .. 255].
 */
void sendFujitsu56(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E,
        unsigned int X);

#endif // SEND_FUJITSU56 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:38:58 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Fujitsu-128".


#if SEND_FUJITSU_128

/**
 * Function for sending one signal from the protcol Fujitsu_128.
 * @param A0 Protocol parameter in the interval [0 .. 255].
 * @param A1 Protocol parameter in the interval [0 .. 255].
 * @param A2 Protocol parameter in the interval [0 .. 255].
 * @param A3 Protocol parameter in the interval [0 .. 255].
 * @param A4 Protocol parameter in the interval [0 .. 255].
 * @param A5 Protocol parameter in the interval [0 .. 255].
 * @param A6 Protocol parameter in the interval [0 .. 255].
 * @param A7 Protocol parameter in the interval [0 .. 255].
 * @param A8 Protocol parameter in the interval [0 .. 255].
 * @param A9 Protocol parameter in the interval [0 .. 255].
 * @param A10 Protocol parameter in the interval [0 .. 255].
 * @param A11 Protocol parameter in the interval [0 .. 255].
 * @param A12 Protocol parameter in the interval [0 .. 255].
 * @param A13 Protocol parameter in the interval [0 .. 255].
 * @param A14 Protocol parameter in the interval [0 .. 255].
 * @param A15 Protocol parameter in the interval [0 .. 255].
 */
void sendFujitsu_128(unsigned int A0,
        unsigned int A1,
        unsigned int A2,
        unsigned int A3,
        unsigned int A4,
        unsigned int A5,
        unsigned int A6,
        unsigned int A7,
        unsigned int A8,
        unsigned int A9,
        unsigned int A10,
        unsigned int A11,
        unsigned int A12,
        unsigned int A13,
        unsigned int A14,
        unsigned int A15);

#endif // SEND_FUJITSU_128 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:07 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Fujitsu_Aircon".


#if SEND_FUJITSU_AIRCON

/**
 * Function for sending one signal from the protcol Fujitsu_Aircon.
 * @param A Protocol parameter in the interval [0 .. 15].
 * @param wOn Protocol parameter in the interval [0 .. 1].
 * @param B Protocol parameter in the interval [0 .. 15].
 * @param C Protocol parameter in the interval [0 .. 15].
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param E Protocol parameter in the interval [0 .. 15].
 * @param tOff Protocol parameter in the interval [0 .. 1024].
 * @param tOn Protocol parameter in the interval [0 .. 1024].
 * @param fOff Protocol parameter in the interval [0 .. 1].
 * @param fOn Protocol parameter in the interval [0 .. 1].
 */
void sendFujitsu_Aircon(unsigned int A,
        unsigned int wOn,
        unsigned int B,
        unsigned int C,
        unsigned int D,
        unsigned int E,
        unsigned int tOff,
        unsigned int tOn,
        unsigned int fOff,
        unsigned int fOn);

#endif // SEND_FUJITSU_AIRCON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:12 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code G.I.4DTV".


#if SEND_GI4DTV

/**
 * Function for sending one signal from the protcol GI4DTV.
 * @param D Protocol parameter in the interval [0 .. 3].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendGI4DTV(unsigned int D,
        unsigned int F);

#endif // SEND_GI4DTV 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:16 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code G.I.4DTVnoCheck".


#if SEND_GI4DTVNOCHECK

/**
 * Function for sending one signal from the protcol GI4DTVnoCheck.
 * @param D Protocol parameter in the interval [0 .. 3].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param C Protocol parameter in the interval [0 .. 15].
 */
void sendGI4DTVnoCheck(unsigned int D,
        unsigned int F,
        unsigned int C);

#endif // SEND_GI4DTVNOCHECK 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:21 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code G.I.Cable".


#if SEND_GICABLE

/**
 * Function for sending one signal from the protcol GICable.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendGICable(unsigned int D,
        unsigned int F);

#endif // SEND_GICABLE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:25 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code GI%20RG".


#if SEND_GIRG

/**
 * Function for sending one signal from the protcol GIRG.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 3].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendGIRG(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_GIRG 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:49 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code GXB".


#if SEND_GXB

/**
 * Function for sending one signal from the protcol GXB.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendGXB(unsigned int D,
        unsigned int F);

#endif // SEND_GXB 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:30 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Grundig16".


#if SEND_GRUNDIG16

/**
 * Function for sending one signal from the protcol Grundig16.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendGrundig16(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_GRUNDIG16 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:35 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Grundig16-30".


#if SEND_GRUNDIG1630

/**
 * Function for sending one signal from the protcol Grundig1630.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendGrundig1630(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_GRUNDIG1630 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:40 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code GuangZhou".


#if SEND_GUANGZHOU

/**
 * Function for sending one signal from the protcol GuangZhou.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 */
void sendGuangZhou(unsigned int D,
        unsigned int F,
        unsigned int S);

#endif // SEND_GUANGZHOU 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:44 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code GwtS".


#if SEND_GWTS

/**
 * Function for sending one signal from the protcol GwtS.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param CRC Protocol parameter in the interval [0 .. 255].
 */
void sendGwtS(unsigned int D,
        unsigned int F,
        unsigned int CRC);

#endif // SEND_GWTS 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:53 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Humax%204Phase".


#if SEND_HUMAX4PHASE

/**
 * Function for sending one signal from the protcol Humax4Phase.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param S Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendHumax4Phase(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_HUMAX4PHASE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:39:58 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code IODATAn".


#if SEND_IODATAN

/**
 * Function for sending one signal from the protcol IODATAn.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param S Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param C Protocol parameter in the interval [0 .. 15].
 * @param x Protocol parameter in the interval [0 .. 127].
 * @param y Protocol parameter in the interval [0 .. 127].
 */
void sendIODATAn(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int C,
        unsigned int x,
        unsigned int y);

#endif // SEND_IODATAN 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:07 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code JVC".


#if SEND_JVC

/**
 * Function for sending one signal from the protcol JVC.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendJVC(unsigned int D,
        unsigned int F);

#endif // SEND_JVC 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:21 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code JVC{2}".


#if SEND_JVC2

/**
 * Function for sending one signal from the protcol JVC2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendJVC2(unsigned int D,
        unsigned int F);

#endif // SEND_JVC2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:11 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code JVC-48".


#if SEND_JVC48

/**
 * Function for sending one signal from the protcol JVC48.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendJVC48(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_JVC48 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:16 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code JVC-56".


#if SEND_JVC56

/**
 * Function for sending one signal from the protcol JVC56.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param X Protocol parameter in the interval [0 .. 255].
 */
void sendJVC56(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int X);

#endif // SEND_JVC56 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:03 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Jerrold".


#if SEND_JERROLD

/**
 * Function for sending one signal from the protcol Jerrold.
 * @param F Protocol parameter in the interval [0 .. 31].
 */
void sendJerrold(unsigned int F);

#endif // SEND_JERROLD 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:26 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Kaseikyo".


#if SEND_KASEIKYO

/**
 * Function for sending one signal from the protcol Kaseikyo.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 15].
 * @param M Protocol parameter in the interval [0 .. 255].
 * @param N Protocol parameter in the interval [0 .. 255].
 */
void sendKaseikyo(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E,
        unsigned int M,
        unsigned int N);

#endif // SEND_KASEIKYO 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:31 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Kaseikyo56".


#if SEND_KASEIKYO56

/**
 * Function for sending one signal from the protcol Kaseikyo56.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param G Protocol parameter in the interval [0 .. 255].
 * @param M Protocol parameter in the interval [0 .. 255].
 * @param N Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 255].
 */
void sendKaseikyo56(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int G,
        unsigned int M,
        unsigned int N,
        unsigned int E);

#endif // SEND_KASEIKYO56 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:36 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Kathrein".


#if SEND_KATHREIN

/**
 * Function for sending one signal from the protcol Kathrein.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendKathrein(unsigned int D,
        unsigned int F);

#endif // SEND_KATHREIN 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:40 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Konka".


#if SEND_KONKA

/**
 * Function for sending one signal from the protcol Konka.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendKonka(unsigned int D,
        unsigned int F);

#endif // SEND_KONKA 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:44 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Logitech".


#if SEND_LOGITECH

/**
 * Function for sending one signal from the protcol Logitech.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendLogitech(unsigned int D,
        unsigned int F);

#endif // SEND_LOGITECH 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:49 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Lumagen".


#if SEND_LUMAGEN

/**
 * Function for sending one signal from the protcol Lumagen.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendLumagen(unsigned int D,
        unsigned int F);

#endif // SEND_LUMAGEN 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:53 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Lutron".


#if SEND_LUTRON

/**
 * Function for sending one signal from the protcol Lutron.
 * @param X Protocol parameter in the interval [0 .. 16777215].
 */
void sendLutron(unsigned int X);

#endif // SEND_LUTRON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:03 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code MCE".


#if SEND_MCE

/**
 * Function for sending one signal from the protcol MCE.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendMCE(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int T);

#endif // SEND_MCE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:40:58 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Matsui".


#if SEND_MATSUI

/**
 * Function for sending one signal from the protcol Matsui.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendMatsui(unsigned int D,
        unsigned int F);

#endif // SEND_MATSUI 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:07 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Metz19".


#if SEND_METZ19

/**
 * Function for sending one signal from the protcol Metz19.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendMetz19(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_METZ19 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:12 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Mitsubishi".


#if SEND_MITSUBISHI

/**
 * Function for sending one signal from the protcol Mitsubishi.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendMitsubishi(unsigned int D,
        unsigned int F);

#endif // SEND_MITSUBISHI 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:16 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Mitsubishi-K".


#if SEND_MITSUBISHIK

/**
 * Function for sending one signal from the protcol MitsubishiK.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 */
void sendMitsubishiK(unsigned int D,
        unsigned int F,
        unsigned int S);

#endif // SEND_MITSUBISHIK 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:21 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NEC".


#if SEND_NEC

/**
 * Function for sending one signal from the protcol NEC.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNEC(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_NEC 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:34 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NEC1".


#if SEND_NEC1

/**
 * Function for sending one signal from the protcol NEC1.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNEC1(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_NEC1 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:39 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NEC1-f16".


#if SEND_NEC1F16

/**
 * Function for sending one signal from the protcol NEC1f16.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 65535].
 */
void sendNEC1f16(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_NEC1F16 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:43 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NEC1-rnc".


#if SEND_NEC1RNC

/**
 * Function for sending one signal from the protcol NEC1rnc.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNEC1rnc(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_NEC1RNC 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:48 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NEC2".


#if SEND_NEC2

/**
 * Function for sending one signal from the protcol NEC2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNEC2(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_NEC2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:26 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NEC-Shirriff".


#if SEND_NECSHIRRIFF

/**
 * Function for sending one signal from the protcol NECShirriff.
 * @param data Protocol parameter in the interval [0 .. 4294967295].
 * @param length Protocol parameter in the interval [1 .. 64].
 */
void sendNECShirriff(unsigned int data,
        unsigned int length);

#endif // SEND_NECSHIRRIFF 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:30 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NEC-Shirriff-32".


#if SEND_NECSHIRRIFF32

/**
 * Function for sending one signal from the protcol NECShirriff32.
 * @param data Protocol parameter in the interval [0 .. 4294967295].
 */
void sendNECShirriff32(unsigned int data);

#endif // SEND_NECSHIRRIFF32 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:53 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NECx1".


#if SEND_NECX1

/**
 * Function for sending one signal from the protcol NECx1.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNECx1(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_NECX1 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:41:57 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NECx2".


#if SEND_NECX2

/**
 * Function for sending one signal from the protcol NECx2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNECx2(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_NECX2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:20 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NRC16".


#if SEND_NRC16

/**
 * Function for sending one signal from the protcol NRC16.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNRC16(unsigned int D,
        unsigned int F);

#endif // SEND_NRC16 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:24 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NRC16-32".


#if SEND_NRC1632

/**
 * Function for sending one signal from the protcol NRC1632.
 * @param D Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNRC1632(unsigned int D,
        unsigned int F);

#endif // SEND_NRC1632 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:29 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code NRC17".


#if SEND_NRC17

/**
 * Function for sending one signal from the protcol NRC17.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNRC17(unsigned int D,
        unsigned int F);

#endif // SEND_NRC17 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:02 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Nokia".


#if SEND_NOKIA

/**
 * Function for sending one signal from the protcol Nokia.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNokia(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_NOKIA 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:06 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Nokia12".


#if SEND_NOKIA12

/**
 * Function for sending one signal from the protcol Nokia12.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendNokia12(unsigned int D,
        unsigned int F);

#endif // SEND_NOKIA12 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:11 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Nokia32".


#if SEND_NOKIA32

/**
 * Function for sending one signal from the protcol Nokia32.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param T Protocol parameter in the interval [0 .. 1].
 * @param X Protocol parameter in the interval [0 .. 127].
 */
void sendNokia32(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int T,
        unsigned int X);

#endif // SEND_NOKIA32 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:15 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Nova%20Pace".


#if SEND_NOVAPACE

/**
 * Function for sending one signal from the protcol NovaPace.
 * @param D Protocol parameter in the interval [0 .. 1023].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendNovaPace(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int T);

#endif // SEND_NOVAPACE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:34 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code OrtekMCE".


#if SEND_ORTEKMCE

/**
 * Function for sending one signal from the protcol OrtekMCE.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendOrtekMCE(unsigned int D,
        unsigned int F);

#endif // SEND_ORTEKMCE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:56 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code PCTV".


#if SEND_PCTV

/**
 * Function for sending one signal from the protcol PCTV.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendPCTV(unsigned int D,
        unsigned int F);

#endif // SEND_PCTV 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:39 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code PaceMSS".


#if SEND_PACEMSS

/**
 * Function for sending one signal from the protcol PaceMSS.
 * @param D Protocol parameter in the interval [0 .. 1].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendPaceMSS(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_PACEMSS 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:43 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Panasonic".


#if SEND_PANASONIC

/**
 * Function for sending one signal from the protcol Panasonic.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendPanasonic(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_PANASONIC 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:47 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Panasonic2".


#if SEND_PANASONIC2

/**
 * Function for sending one signal from the protcol Panasonic2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param X Protocol parameter in the interval [0 .. 255].
 */
void sendPanasonic2(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int X);

#endif // SEND_PANASONIC2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:42:52 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Panasonic_Old".


#if SEND_PANASONIC_OLD

/**
 * Function for sending one signal from the protcol Panasonic_Old.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendPanasonic_Old(unsigned int D,
        unsigned int F);

#endif // SEND_PANASONIC_OLD 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:18 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Pioneer".


#if SEND_PIONEER

/**
 * Function for sending one signal from the protcol Pioneer.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendPioneer(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_PIONEER 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:23 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Pioneer-Mix".


#if SEND_PIONEERMIX

/**
 * Function for sending one signal from the protcol PioneerMix.
 * @param D0 Protocol parameter in the interval [0 .. 255].
 * @param F0 Protocol parameter in the interval [0 .. 255].
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendPioneerMix(unsigned int D0,
        unsigned int F0,
        unsigned int D,
        unsigned int F);

#endif // SEND_PIONEERMIX 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:27 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Proton".


#if SEND_PROTON

/**
 * Function for sending one signal from the protcol Proton.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendProton(unsigned int D,
        unsigned int F);

#endif // SEND_PROTON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:32 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Proton-40".


#if SEND_PROTON40

/**
 * Function for sending one signal from the protcol Proton40.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendProton40(unsigned int D,
        unsigned int F);

#endif // SEND_PROTON40 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:37 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RC5".


#if SEND_RC5

/**
 * Function for sending one signal from the protcol RC5.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 127].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendRC5(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_RC5 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:41 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RC5-7F".


#if SEND_RC57F

/**
 * Function for sending one signal from the protcol RC57F.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 127].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendRC57F(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_RC57F 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:46 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RC5-7F-57".


#if SEND_RC57F57

/**
 * Function for sending one signal from the protcol RC57F57.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 127].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendRC57F57(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_RC57F57 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:50 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RC5x".


#if SEND_RC5X

/**
 * Function for sending one signal from the protcol RC5x.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param S Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendRC5x(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int T);

#endif // SEND_RC5X 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:55 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RCA".


#if SEND_RCA

/**
 * Function for sending one signal from the protcol RCA.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendRCA(unsigned int D,
        unsigned int F);

#endif // SEND_RCA 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:04 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RCA-38".


#if SEND_RCA38

/**
 * Function for sending one signal from the protcol RCA38.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendRCA38(unsigned int D,
        unsigned int F);

#endif // SEND_RCA38 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:09 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RCA-38(Old)".


#if SEND_RCA38OLD

/**
 * Function for sending one signal from the protcol RCA38Old.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendRCA38Old(unsigned int D,
        unsigned int F);

#endif // SEND_RCA38OLD 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:59 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RCA(Old)".


#if SEND_RCAOLD

/**
 * Function for sending one signal from the protcol RCAOld.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendRCAOld(unsigned int D,
        unsigned int F);

#endif // SEND_RCAOLD 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:13 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RECS80".


#if SEND_RECS80

/**
 * Function for sending one signal from the protcol RECS80.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendRECS80(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_RECS80 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:17 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RECS80-0045".


#if SEND_RECS800045

/**
 * Function for sending one signal from the protcol RECS800045.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendRECS800045(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_RECS800045 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:22 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RECS80-0068".


#if SEND_RECS800068

/**
 * Function for sending one signal from the protcol RECS800068.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendRECS800068(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_RECS800068 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:27 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code RECS80-0090".


#if SEND_RECS800090

/**
 * Function for sending one signal from the protcol RECS800090.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendRECS800090(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_RECS800090 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:31 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Revox".


#if SEND_REVOX

/**
 * Function for sending one signal from the protcol Revox.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendRevox(unsigned int D,
        unsigned int F);

#endif // SEND_REVOX 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:35 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Roku".


#if SEND_ROKU

/**
 * Function for sending one signal from the protcol Roku.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendRoku(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_ROKU 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:40 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Rs200".


#if SEND_RS200

/**
 * Function for sending one signal from the protcol Rs200.
 * @param H1 Protocol parameter in the interval [1 .. 4].
 * @param H2 Protocol parameter in the interval [1 .. 4].
 * @param H3 Protocol parameter in the interval [1 .. 4].
 * @param H4 Protocol parameter in the interval [1 .. 4].
 * @param D Protocol parameter in the interval [1 .. 6].
 * @param F Protocol parameter in the interval [0 .. 2].
 */
void sendRs200(unsigned int H1,
        unsigned int H2,
        unsigned int H3,
        unsigned int H4,
        unsigned int D,
        unsigned int F);

#endif // SEND_RS200 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:21 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code SIM2".


#if SEND_SIM2

/**
 * Function for sending one signal from the protcol SIM2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendSIM2(unsigned int D,
        unsigned int F);

#endif // SEND_SIM2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:45 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sampo".


#if SEND_SAMPO

/**
 * Function for sending one signal from the protcol Sampo.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param S Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendSampo(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_SAMPO 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:49 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Samsung20".


#if SEND_SAMSUNG20

/**
 * Function for sending one signal from the protcol Samsung20.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param S Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendSamsung20(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_SAMSUNG20 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:54 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Samsung36".


#if SEND_SAMSUNG36

/**
 * Function for sending one signal from the protcol Samsung36.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 15].
 */
void sendSamsung36(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E);

#endif // SEND_SAMSUNG36 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:58 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code ScAtl-6".


#if SEND_SCATL6

/**
 * Function for sending one signal from the protcol ScAtl6.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendScAtl6(unsigned int D,
        unsigned int F);

#endif // SEND_SCATL6 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:03 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sharp".


#if SEND_SHARP

/**
 * Function for sending one signal from the protcol Sharp.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendSharp(unsigned int D,
        unsigned int F);

#endif // SEND_SHARP 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:12 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sharp{1}".


#if SEND_SHARP1

/**
 * Function for sending one signal from the protcol Sharp1.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendSharp1(unsigned int D,
        unsigned int F);

#endif // SEND_SHARP1 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:16 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sharp{2}".


#if SEND_SHARP2

/**
 * Function for sending one signal from the protcol Sharp2.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendSharp2(unsigned int D,
        unsigned int F);

#endif // SEND_SHARP2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:08 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code SharpDVD".


#if SEND_SHARPDVD

/**
 * Function for sending one signal from the protcol SharpDVD.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 15].
 */
void sendSharpDVD(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E);

#endif // SEND_SHARPDVD 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:26 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Solidtek16".


#if SEND_SOLIDTEK16

/**
 * Function for sending one signal from the protcol Solidtek16.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendSolidtek16(unsigned int D,
        unsigned int F);

#endif // SEND_SOLIDTEK16 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:31 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Somfy".


#if SEND_SOMFY

/**
 * Function for sending one signal from the protcol Somfy.
 * @param F Protocol parameter in the interval [0 .. 3].
 * @param D Protocol parameter in the interval [0 .. 7].
 */
void sendSomfy(unsigned int F,
        unsigned int D);

#endif // SEND_SOMFY 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:35 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sony12".


#if SEND_SONY12

/**
 * Function for sending one signal from the protcol Sony12.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendSony12(unsigned int D,
        unsigned int F);

#endif // SEND_SONY12 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:40 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sony15".


#if SEND_SONY15

/**
 * Function for sending one signal from the protcol Sony15.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendSony15(unsigned int D,
        unsigned int F);

#endif // SEND_SONY15 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:45 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sony20".


#if SEND_SONY20

/**
 * Function for sending one signal from the protcol Sony20.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendSony20(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_SONY20 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:49 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sony8".


#if SEND_SONY8

/**
 * Function for sending one signal from the protcol Sony8.
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendSony8(unsigned int F);

#endif // SEND_SONY8 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:53 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code StreamZap".


#if SEND_STREAMZAP

/**
 * Function for sending one signal from the protcol StreamZap.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendStreamZap(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_STREAMZAP 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:58 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code StreamZap-57".


#if SEND_STREAMZAP57

/**
 * Function for sending one signal from the protcol StreamZap57.
 * @param D Protocol parameter in the interval [0 .. 63].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendStreamZap57(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_STREAMZAP57 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:02 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Sunfire".


#if SEND_SUNFIRE

/**
 * Function for sending one signal from the protcol Sunfire.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendSunfire(unsigned int D,
        unsigned int F);

#endif // SEND_SUNFIRE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:07 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code TDC-38".


#if SEND_TDC38

/**
 * Function for sending one signal from the protcol TDC38.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param S Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendTDC38(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_TDC38 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:12 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code TDC-56".


#if SEND_TDC56

/**
 * Function for sending one signal from the protcol TDC56.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param S Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 127].
 */
void sendTDC56(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_TDC56 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:16 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Teac-K".


#if SEND_TEACK

/**
 * Function for sending one signal from the protcol TeacK.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param X Protocol parameter in the interval [0 .. 15].
 */
void sendTeacK(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int X);

#endif // SEND_TEACK 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:21 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Thomson".


#if SEND_THOMSON

/**
 * Function for sending one signal from the protcol Thomson.
 * @param D Protocol parameter in the interval [0 .. 31].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendThomson(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_THOMSON 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:25 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Thomson7".


#if SEND_THOMSON7

/**
 * Function for sending one signal from the protcol Thomson7.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param F Protocol parameter in the interval [0 .. 127].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendThomson7(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_THOMSON7 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:30 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Tivo".


#if SEND_TIVO

/**
 * Function for sending one signal from the protcol Tivo.
 * @param D Protocol parameter in the interval [133 .. 133].
 * @param S Protocol parameter in the interval [48 .. 48].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param U Protocol parameter in the interval [0 .. 15].
 */
void sendTivo(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int U);

#endif // SEND_TIVO 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:34 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Velleman".


#if SEND_VELLEMAN

/**
 * Function for sending one signal from the protcol Velleman.
 * @param D Protocol parameter in the interval [0 .. 7].
 * @param F Protocol parameter in the interval [0 .. 63].
 * @param T Protocol parameter in the interval [0 .. 1].
 */
void sendVelleman(unsigned int D,
        unsigned int F,
        unsigned int T);

#endif // SEND_VELLEMAN 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:39 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Velodyne".


#if SEND_VELODYNE

/**
 * Function for sending one signal from the protcol Velodyne.
 * @param D Protocol parameter in the interval [0 .. 15].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendVelodyne(unsigned int D,
        unsigned int S,
        unsigned int F);

#endif // SEND_VELODYNE 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:44 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Viewstar".


#if SEND_VIEWSTAR

/**
 * Function for sending one signal from the protcol Viewstar.
 * @param F Protocol parameter in the interval [0 .. 31].
 */
void sendViewstar(unsigned int F);

#endif // SEND_VIEWSTAR 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:48 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Whynter".


#if SEND_WHYNTER

/**
 * Function for sending one signal from the protcol Whynter.
 * @param F Protocol parameter in the interval [0 .. 4294967295].
 */
void sendWhynter(unsigned int F);

#endif // SEND_WHYNTER 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:52 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code X10".


#if SEND_X10

/**
 * Function for sending one signal from the protcol X10.
 * @param F Protocol parameter in the interval [0 .. 31].
 */
void sendX10(unsigned int F);

#endif // SEND_X10 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:01 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code X10_18".


#if SEND_X10_18

/**
 * Function for sending one signal from the protcol X10_18.
 * @param F Protocol parameter in the interval [0 .. 511].
 */
void sendX10_18(unsigned int F);

#endif // SEND_X10_18 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:06 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code X10_8".


#if SEND_X10_8

/**
 * Function for sending one signal from the protcol X10_8.
 * @param F Protocol parameter in the interval [0 .. 15].
 */
void sendX10_8(unsigned int F);

#endif // SEND_X10_8 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:46:57 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code X10.n".


#if SEND_X10N

/**
 * Function for sending one signal from the protcol X10n.
 * @param F Protocol parameter in the interval [0 .. 31].
 * @param N Protocol parameter in the interval [0 .. 15].
 */
void sendX10n(unsigned int F,
        unsigned int N);

#endif // SEND_X10N 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:35:58 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code 48-NEC1".


#if SEND_X48NEC1

/**
 * Function for sending one signal from the protcol X48NEC1.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 255].
 */
void sendX48NEC1(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E);

#endif // SEND_X48NEC1 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:36:03 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code 48-NEC2".


#if SEND_X48NEC2

/**
 * Function for sending one signal from the protcol X48NEC2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param E Protocol parameter in the interval [0 .. 255].
 */
void sendX48NEC2(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E);

#endif // SEND_X48NEC2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:15 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code XMP".


#if SEND_XMP

/**
 * Function for sending one signal from the protcol XMP.
 * @param F Protocol parameter in the interval [0 .. 65535].
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param OEM Protocol parameter in the interval [0 .. 255].
 */
void sendXMP(unsigned int F,
        unsigned int D,
        unsigned int S,
        unsigned int OEM);

#endif // SEND_XMP 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:19 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code XMP-1".


#if SEND_XMP1

/**
 * Function for sending one signal from the protcol XMP1.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param OEM Protocol parameter in the interval [0 .. 255].
 */
void sendXMP1(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int OEM);

#endif // SEND_XMP1 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:24 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code XMP-2".


#if SEND_XMP2

/**
 * Function for sending one signal from the protcol XMP2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param OEM Protocol parameter in the interval [0 .. 255].
 */
void sendXMP2(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int OEM);

#endif // SEND_XMP2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:43 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code XMPMeta".


#if SEND_XMPMETA

/**
 * Function for sending one signal from the protcol XMPMeta.
 * @param FF Protocol parameter in the interval [0 .. 65535].
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param OEM Protocol parameter in the interval [0 .. 255].
 */
void sendXMPMeta(unsigned int FF,
        unsigned int D,
        unsigned int S,
        unsigned int OEM);

#endif // SEND_XMPMETA 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:29 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code XMPff".


#if SEND_XMPFF

/**
 * Function for sending one signal from the protcol XMPff.
 * @param F Protocol parameter in the interval [0 .. 65535].
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param OEM Protocol parameter in the interval [0 .. 255].
 */
void sendXMPff(unsigned int F,
        unsigned int D,
        unsigned int S,
        unsigned int OEM);

#endif // SEND_XMPFF 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:34 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code XMPff-1".


#if SEND_XMPFF1

/**
 * Function for sending one signal from the protcol XMPff1.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param OEM Protocol parameter in the interval [0 .. 255].
 */
void sendXMPff1(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int OEM);

#endif // SEND_XMPFF1 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:39 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code XMPff-2".


#if SEND_XMPFF2

/**
 * Function for sending one signal from the protcol XMPff2.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 * @param OEM Protocol parameter in the interval [0 .. 255].
 */
void sendXMPff2(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int OEM);

#endif // SEND_XMPFF2 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:10 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Xiaomi".


#if SEND_XIAOMI

/**
 * Function for sending one signal from the protcol Xiaomi.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendXiaomi(unsigned int D,
        unsigned int F);

#endif // SEND_XIAOMI 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:49 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Zaptor-36".


#if SEND_ZAPTOR36

/**
 * Function for sending one signal from the protcol Zaptor36.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 127].
 * @param E Protocol parameter in the interval [0 .. 15].
 */
void sendZaptor36(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E);

#endif // SEND_ZAPTOR36 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:47:53 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Zaptor-56".


#if SEND_ZAPTOR56

/**
 * Function for sending one signal from the protcol Zaptor56.
 * @param D Protocol parameter in the interval [0 .. 255].
 * @param S Protocol parameter in the interval [0 .. 127].
 * @param F Protocol parameter in the interval [0 .. 127].
 * @param E Protocol parameter in the interval [0 .. 15].
 */
void sendZaptor56(unsigned int D,
        unsigned int S,
        unsigned int F,
        unsigned int E);

#endif // SEND_ZAPTOR56 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:01 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code pid-0001".


#if SEND_PID0001

/**
 * Function for sending one signal from the protcol pid0001.
 * @param F Protocol parameter in the interval [0 .. 31].
 */
void sendpid0001(unsigned int F);

#endif // SEND_PID0001 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:05 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code pid-0003".


#if SEND_PID0003

/**
 * Function for sending one signal from the protcol pid0003.
 * @param F Protocol parameter in the interval [0 .. 255].
 */
void sendpid0003(unsigned int F);

#endif // SEND_PID0003 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:10 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code pid-0004".


#if SEND_PID0004

/**
 * Function for sending one signal from the protcol pid0004.
 * @param F Protocol parameter in the interval [0 .. 63].
 */
void sendpid0004(unsigned int F);

#endif // SEND_PID0004 
// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:43:14 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code pid-0083".


#if SEND_PID0083

/**
 * Function for sending one signal from the protcol pid0083.
 * @param F Protocol parameter in the interval [0 .. 31].
 */
void sendpid0083(unsigned int F);

#endif // SEND_PID0083 
