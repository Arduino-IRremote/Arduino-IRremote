// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:44:40 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Rs200".


#include "IRremote.h"
/*
IRP: 
{35.7k,msb}<50p,-120p|21p,-120p>(25:6,(H4-1):2,(H3-1):2,(H2-1):2,(H1-1):2,P:1,(D-1):3,F:2,0:2,sum:4,-1160p)*{P=~(#(D-1)+#F):1,sum=9+((H4-1)*4+(H3-1))+((H2-1)*4+(H1-1))+(P*8+(D-1))+F*4}[H1:1..4,H2:1..4,H3:1..4,H4:1..4,D:1..6,F:0..2]
*/

/*
Protocol documentation:
This protocol is/was used by the so-called RS-200 RF (433MHz) controlled switches, that was sold by Conrad Electronics. There is a \"house number\" consisting of for digits, each in the range 1 to 4. These are called H1, H2, H3, and H4 in the IRP. There is also a \"device address\". Officially, it ranges from 1 to 4, however, at least on the hardware I tried, 5 can also be used and assigned to a receiver. Also, 6 was working, and in fact controlled the \"group\" consisting of all devices with address 1,...,5. For 7 and 8, no function has been verified. F=0 is the power on command, F=1 the power off command, and F=2 the power toggle command.
*/

#if SEND_RS200

extern unsigned int finiteBitField(unsigned int data,
        unsigned int width,
        unsigned int chop,
        bool complement,
        bool reverse);
extern unsigned int bitCount(unsigned int data);
extern unsigned int bitReverse(unsigned int data, unsigned int width);


static inline void flash(IRsend* instance, unsigned int d) {
    instance->mark(d);
}

static inline void gap(IRsend* instance, unsigned int d) {
    instance->space(d);
}



static void bitField(IRsend* instance, unsigned int data, unsigned int width) {
    for (unsigned int i = 0; i < width; i++) {
        switch(((unsigned int)data >> (width - i - 1)) & 1) {
        case 0: {
            flash(instance, 1401);
            gap(instance, 3361);
        }
        break;
        case 1: {
            flash(instance, 588);
            gap(instance, 3361);
        }
        break;
        }
    }
}
// Local functions; corresponds to Definitions in the IRP.
static inline unsigned int P(unsigned int H1,
        unsigned int H2,
        unsigned int H3,
        unsigned int H4,
        unsigned int D,
        unsigned int F) {
    return finiteBitField((bitCount((D) - (1U))) + (bitCount(F)), 1U, 0, true, false);
}

static inline unsigned int sum(unsigned int H1,
        unsigned int H2,
        unsigned int H3,
        unsigned int H4,
        unsigned int D,
        unsigned int F) {
    return ((((9U) + ((((H4) - (1U)) * (4U)) + ((H3) - (1U)))) + ((((H2) - (1U)) * (4U)) + ((H1) - (1U)))) + (((P(H1, H2, H3, H4, D, F)) * (8U)) + ((D) - (1U)))) + ((F) * (4U));
}

/**
 * Function for sending one signal from the protcol Rs200.
 * @param H1 Protocol parameter in the interval [1 .. 4].
 * @param H2 Protocol parameter in the interval [1 .. 4].
 * @param H3 Protocol parameter in the interval [1 .. 4].
 * @param H4 Protocol parameter in the interval [1 .. 4].
 * @param D Protocol parameter in the interval [1 .. 6].
 * @param F Protocol parameter in the interval [0 .. 2].
 */
void IRsend::sendRs200(unsigned int H1,
        unsigned int H2,
        unsigned int H3,
        unsigned int H4,
        unsigned int D,
        unsigned int F) {
    enableIROut(35700U / 1000U);
    IRsend* instance = this;
    bitField(instance, 25U, 6U);
    bitField(instance, (H4) - (1U), 2U);
    bitField(instance, (H3) - (1U), 2U);
    bitField(instance, (H2) - (1U), 2U);
    bitField(instance, (H1) - (1U), 2U);
    bitField(instance, P(H1, H2, H3, H4, D, F), 1U);
    bitField(instance, (D) - (1U), 3U);
    bitField(instance, F, 2U);
    bitField(instance, 0U, 2U);
    bitField(instance, sum(H1, H2, H3, H4, D, F), 4U);
    gap(instance, 32493);
}

#endif // SEND_RS200 
