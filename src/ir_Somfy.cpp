// This file was generated by IrpTransmogrifier version 0.2.1dev by bengt
// on Mon Oct 23 11:45:31 CEST 2017
// using command line arguments:
// "-c /home/bengt/harctoolbox/IrpTransmogrifier/tools/../src/main/resources/IrpProtocols.xml --url --loglevel info --logformat %5$s%n code -s src/main/st --dir ../Arduino-IRremote-bm/src -t irremote-renderer-cppsymbols -t irremote-renderer-declarations -t irremote-renderer-code Somfy".


#include "IRremote.h"
/*
IRP: 
{35.7k}<308,-881|669,-520>(2072,-484,F:2,D:3,C:4,-2300)*{C=F*4+D+3}[F:0..3,D:0..7]
*/

/*
Protocol documentation:
C is reported as SubDevice. It is probably a check nibble {C = F*4 + D + 3}. F = 1 for UP or 2 for DOWN. D = 1, 2 or 3 for the three observed devices, or D = 0 to control all devices together.
*/

#if SEND_SOMFY

extern unsigned int finiteBitField(unsigned int data,
        unsigned int width,
        unsigned int chop,
        bool complement,
        bool reverse);
extern unsigned int bitCount(unsigned int data);
extern unsigned int bitReverse(unsigned int data, unsigned int width);


static inline void flash(IRsend* instance, unsigned int d) {
    instance->mark(d);
}

static inline void gap(IRsend* instance, unsigned int d) {
    instance->space(d);
}



static void bitField(IRsend* instance, unsigned int data, unsigned int width) {
    for (unsigned int i = 0; i < width; i++) {
        switch(((unsigned int)data >> i) & 1) {
        case 0: {
            flash(instance, 308);
            gap(instance, 881);
        }
        break;
        case 1: {
            flash(instance, 669);
            gap(instance, 520);
        }
        break;
        }
    }
}
// Local functions; corresponds to Definitions in the IRP.
static inline unsigned int C(unsigned int F,
        unsigned int D) {
    return (((F) * (4U)) + (D)) + (3U);
}

/**
 * Function for sending one signal from the protcol Somfy.
 * @param F Protocol parameter in the interval [0 .. 3].
 * @param D Protocol parameter in the interval [0 .. 7].
 */
void IRsend::sendSomfy(unsigned int F,
        unsigned int D) {
    enableIROut(35700U / 1000U);
    IRsend* instance = this;
    flash(instance, 2072);
    gap(instance, 484);
    bitField(instance, F, 2U);
    bitField(instance, D, 3U);
    bitField(instance, C(F, D), 4U);
    gap(instance, 2300);
}

#endif // SEND_SOMFY 
